name: Build and Create Drone Autonomy Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: read
  packages: read
  id-token: write

concurrency:
  group: "create-release"
  cancel-in-progress: false

jobs:
  build-and-upload:
    strategy:
      fail-fast: false
      matrix:
        os: [[self-hosted, linux, X64], [self-hosted, linux, ARM64]]
        architecture: [AMD64, ARM64]
        exclude:
          - os: [self-hosted, linux, X64]
            architecture: ARM64
          - os: [self-hosted, linux, ARM64]
            architecture: AMD64

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Fix Dubious Ownership
        run: git config --global --add safe.directory /opt/Autonomy_Software

      - name: Checkout Tag
        run: |
          cd /opt/Drone_Autonomy_Software/
          git fetch --tags --force
          tag=$(git describe --tags `git rev-list --tags --max-count=1`)
          echo $tag
          git checkout $tag

      - name: Build and Create Executable
        run: |
          cd /opt/Drone_Autonomy_Software/
          if [ -d "build" ]; then rm -Rf build; fi
          mkdir build
          cd build
          cmake ..
          make
          make package

      - name: Rename Executable
        run: mv /opt/Drone_Autonomy_Software/build/Drone_Autonomy_Software**.sh /opt/Drone_Autonomy_Software/build/Drone_Autonomy_Software_${{ matrix.architecture }}.sh

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: Drone-Autonomy-${{ matrix.architecture }}
          path: /opt/Drone_Autonomy_Software/build/Drone_Autonomy_Software_${{ matrix.architecture }}.sh

  create-release:
    runs-on: [self-hosted, linux, X64]
    needs: build-and-upload

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Fix Dubious Ownership
        run: git config --global --add safe.directory /opt/Autonomy_Software

      - name: Determine Version
        id: version
        run: "echo ::set-output name=version::${GITHUB_REF#refs/tags/}"

      - name: Download Artifacts
        uses: actions/download-artifact@v3
        id: download
        with:
          path: /opt/Drone_Autonomy_Software/build/

      - name: Display Structure
        run: ls
        working-directory: /opt/Drone_Autonomy_Software/build/

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          draft: false
          prerelease: false
          name: "${{ steps.version.outputs.version }}"
          files: "/opt/Drone_Autonomy_Software/build/**"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Delete Artifacts
        uses: geekyeggo/delete-artifact@v2
        with:
          name: |
            Drone-Autonomy-AMD64
            Drone-Autonomy-ARM64
